name: test
on:
  push:
    branches:
      - latest
      - dev
      - patch-dev
  pull_request:
    
env:
  PRISMA_TELEMETRY_INFORMATION: "prisma-examples test.yaml"

jobs:
  
  # generate json for matrix, https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/#new-fromjson-method-in-expressions
  projects:
    if: github.repository_owner == 'prisma'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        
      - name: get list of projects in json array
        id: set-matrix
        run: |
          # list all package.json files (not in node_modules)
          packages=$(find "." -not -path "*/node_modules/*" -type f -name "package.json")
          # turn each line into json object
          json1=$(echo "$packages" | tr ' ' '\n' | sed 's/.*/{"path": "&" }/')
          # combine objects into json array
          json2=$(echo $json1 | jq -c . | jq -s .)
          # and package into wanted json structure
          json3=$(echo "{\"include\":$json2}")
          # set as variable to be used later
          echo "::set-output name=matrix::$json3"
          # output for debugging
          echo $json3
    
  test:
    needs: projects
    
    if: github.repository_owner == 'prisma'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:12-2.5-alpine
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testing
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - '5432:5432'

    strategy:
      matrix: ${{fromJson(needs.projects.outputs.matrix)}}
      
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          version: 12

      - name: test
        run: sh .github/scripts/test.sh ${{ matrix.path }}
        env:
          SLACK_WEBHOOK_URL_FAILING: ${{ secrets.SLACK_WEBHOOK_URL_FAILING }}
